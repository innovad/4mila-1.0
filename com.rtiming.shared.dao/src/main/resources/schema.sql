CREATE SEQUENCE rt_account_account_nr_seq;
-- key sequence should start after protected codes
CREATE SEQUENCE rt_key_key_nr_seq start with 100000;
CREATE SEQUENCE rt_web_session_web_session_nr_seq;
CREATE SEQUENCE rt_position_position_nr_seq;

-- -----------------------------------------------------
-- Table rt_key (Hibernate)
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS rt_key (
	key_nr INT8,
	PRIMARY KEY (key_nr) )
;

-- -----------------------------------------------------
-- Table rt_client
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_client (
  CLIENT_NR INT8 ,
  PRIMARY KEY (CLIENT_NR) )
;


-- -----------------------------------------------------
-- Table rt_country
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_country (
  COUNTRY_UID INT8  NOT NULL ,
  COUNTRY_CODE VARCHAR(2) NULL DEFAULT NULL ,
  NATION VARCHAR(3) NULL DEFAULT NULL ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (COUNTRY_UID, CLIENT_NR) ,
  CONSTRAINT RT_COUNTRY_FK1
    FOREIGN KEY (CLIENT_NR)
    REFERENCES rt_client (CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_COUNTRY_FK1 ON rt_country (CLIENT_NR) ;

CREATE INDEX RT_COUNTRY_IX1 ON rt_country (COUNTRY_CODE);

CREATE INDEX RT_COUNTRY_IX2 ON rt_country (NATION);

ALTER TABLE rt_country ADD CONSTRAINT rt_country_unique_nation UNIQUE (NATION, CLIENT_NR);

ALTER TABLE rt_country ADD CONSTRAINT rt_country_unique_country_code UNIQUE (COUNTRY_CODE, CLIENT_NR);


-- -----------------------------------------------------
-- Table rt_city
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_city (
  CITY_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  NAME VARCHAR(250) NULL DEFAULT NULL ,
  REGION VARCHAR(250) NULL DEFAULT NULL ,
  ZIP VARCHAR(60) NULL DEFAULT NULL ,
  COUNTRY_UID INT8  NULL DEFAULT NULL ,
  AREA_UID INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (CITY_NR, CLIENT_NR) ,
  CONSTRAINT RT_CITY_FK1
    FOREIGN KEY (COUNTRY_UID,CLIENT_NR)
    REFERENCES rt_country (COUNTRY_UID,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_CITY_FK2
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_CITY_FK1 ON rt_city (COUNTRY_UID) ;

CREATE INDEX RT_CITY_IX1 ON rt_city (NAME,REGION,ZIP);

CREATE INDEX RT_CITY_FK2 ON rt_city (CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_address
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_address (
  ADDRESS_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  STREET VARCHAR(250) NULL DEFAULT NULL ,
  PHONE VARCHAR(250) NULL DEFAULT NULL ,
  FAX VARCHAR(250) NULL DEFAULT NULL ,
  MOBILE VARCHAR(250) NULL DEFAULT NULL ,
  EMAIL VARCHAR(250) NULL DEFAULT NULL ,
  WWW VARCHAR(250) NULL DEFAULT NULL ,
  CITY_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (ADDRESS_NR, CLIENT_NR) ,
  CONSTRAINT RT_ADDRESS_FK1
    FOREIGN KEY (CITY_NR , CLIENT_NR )
    REFERENCES rt_city (CITY_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_ADDRESS_FK2
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;
CREATE INDEX RT_ADDRESS_FK1 ON rt_address (CITY_NR, CLIENT_NR) ;

CREATE INDEX RT_ADDRESS_FK2 ON rt_address (CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_class_age
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_class_age (
  CLASS_AGE_NR INT8 ,
  CLASS_UID INT8  NULL DEFAULT NULL ,
  AGE_FROM INT8  NULL DEFAULT NULL ,
  AGE_TO INT8  NULL DEFAULT NULL ,
  SEX_UID INT8  NULL DEFAULT NULL ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (CLASS_AGE_NR,CLIENT_NR))
;

-- -----------------------------------------------------
-- Table rt_account
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_account (
  ACCOUNT_NR INT8 ,
  USERNAME VARCHAR(250) NULL DEFAULT NULL ,
  PASSWORD VARCHAR(250) NULL DEFAULT NULL ,
  EMAIL VARCHAR(250) NULL DEFAULT NULL ,
  FIRST_NAME VARCHAR(250) NULL DEFAULT NULL ,
  LAST_NAME VARCHAR(250) NULL DEFAULT NULL ,
  GLOBAL_CLIENT_NR INT8 NULL DEFAULT NULL ,
  PRIMARY KEY (ACCOUNT_NR),
  CONSTRAINT RT_ACCOUNT_FK1
    FOREIGN KEY (GLOBAL_CLIENT_NR)
    REFERENCES rt_client (CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
  )
;

ALTER TABLE rt_account ADD CONSTRAINT rt_account_unique_email UNIQUE (EMAIL);
ALTER TABLE rt_account ADD CONSTRAINT rt_account_unique_username UNIQUE (USERNAME);


-- -----------------------------------------------------
-- Table rt_club
-- RT_CLUB_FK1 is created after rt_runner table
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_club (
  CLUB_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  NAME VARCHAR(250) NULL DEFAULT NULL ,
  SHORTCUT VARCHAR(60) NULL DEFAULT NULL ,
  EXT_KEY VARCHAR(60) NULL DEFAULT NULL ,
  CONTACT_RUNNER_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (CLUB_NR, CLIENT_NR) ,
  CONSTRAINT RT_CLUB_FK2
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX CONTACT_RUNNER_NR ON rt_club (CONTACT_RUNNER_NR, CLIENT_NR) ;

CREATE INDEX RT_CLUB_FK2 ON rt_club (CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_event
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_event (
  EVENT_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  EVT_ZERO TIMESTAMP NULL DEFAULT NULL ,
  EVT_FINISH TIMESTAMP NULL DEFAULT NULL ,
  TIMEZONE_OFFSET INT4 NULL DEFAULT NULL ,
  EVT_LAST_UPLOAD TIMESTAMP NULL DEFAULT NULL ,
  NAME VARCHAR(250) NULL DEFAULT NULL ,
  LOCATION VARCHAR(250) NULL DEFAULT NULL ,
  MAP VARCHAR(250) NULL DEFAULT NULL ,
  TYPE_UID INT8 NULL DEFAULT NULL,
  PUNCHING_SYSTEM_UID INT8  NULL DEFAULT NULL ,
  FORMAT VARCHAR(60) NULL DEFAULT NULL ,
  PRIMARY KEY (EVENT_NR, CLIENT_NR) )
;

-- -----------------------------------------------------
-- Table rt_control
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_control (
  CONTROL_NR INT8 ,
  CONTROL_NO VARCHAR(60) NULL DEFAULT NULL ,
  EVENT_NR INT8  NULL DEFAULT NULL ,
  LOCALX DOUBLE PRECISION NULL DEFAULT NULL ,
  LOCALY DOUBLE PRECISION NULL DEFAULT NULL ,
  TYPE_UID INT8  NULL DEFAULT NULL ,
  ACTIVE BOOLEAN NOT NULL DEFAULT TRUE ,
  GLOBALX DOUBLE PRECISION NULL DEFAULT NULL ,
  GLOBALY DOUBLE PRECISION NULL DEFAULT NULL ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (CONTROL_NR,CLIENT_NR) ,
  CONSTRAINT RT_CONTROL_FK1
    FOREIGN KEY (EVENT_NR,CLIENT_NR)
    REFERENCES rt_event (EVENT_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_CONTROL_FK1 ON rt_control (EVENT_NR) ;


-- -----------------------------------------------------
-- Table rt_control_replacement
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_control_replacement (
  CONTROL_NR INT8  NOT NULL ,
  REPLACEMENT_CONTROL_NR INT8  NOT NULL ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (CONTROL_NR, REPLACEMENT_CONTROL_NR, CLIENT_NR) ,
  CONSTRAINT RT_CONTROL_REPLACEMENT_FK1
    FOREIGN KEY (CONTROL_NR,CLIENT_NR)
    REFERENCES rt_control (CONTROL_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_CONTROL_REPLACEMENT_FK2
    FOREIGN KEY (REPLACEMENT_CONTROL_NR,CLIENT_NR)
    REFERENCES rt_control (CONTROL_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_CONTROL_REPLACEMENT_FK1 ON rt_control_replacement (CONTROL_NR,CLIENT_NR) ;

CREATE INDEX RT_CONTROL_REPLACEMENT_FK2 ON rt_control_replacement (REPLACEMENT_CONTROL_NR,CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_startlist_setting
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_startlist_setting (
  STARTLIST_SETTING_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  TYPE_UID INT8  NULL DEFAULT NULL ,
  FIRST_STARTTIME BIGINT NULL DEFAULT NULL ,
  START_INTERVAL INT8  NULL DEFAULT NULL ,
  VACANT_PERCENT INT8  NULL DEFAULT NULL ,
  VACANT_ABSOLUTE INT8  NULL DEFAULT NULL ,
  VACANT_POSITION_UID INT8  NULL DEFAULT NULL ,
  GROUP_REGISTRATIONS BOOLEAN NULL DEFAULT NULL ,
  EVENT_NR INT8  NULL DEFAULT NULL ,
  BIB_NO_FROM INT8  NULL DEFAULT NULL ,
  BIB_NO_ORDER_UID INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (STARTLIST_SETTING_NR, CLIENT_NR) ,
  CONSTRAINT RT_STARTLIST_SETTING_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_STARTLIST_SETTING_FK2
    FOREIGN KEY (EVENT_NR, CLIENT_NR)
    REFERENCES rt_event (EVENT_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    )
;

CREATE INDEX RT_STARTLIST_SETTING_FK1 ON rt_startlist_setting (CLIENT_NR) ;

CREATE INDEX RT_STARTLIST_SETTING_FK2 ON rt_startlist_setting (EVENT_NR) ;


-- -----------------------------------------------------
-- Table rt_startlist_setting_option
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_startlist_setting_option (
  STARTLIST_SETTING_NR INT8  NOT NULL ,
  CLIENT_NR INT8  NOT NULL ,
  OPTION_UID INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (STARTLIST_SETTING_NR, CLIENT_NR, OPTION_UID) ,
  CONSTRAINT RT_STARTLIST_SETTING_OPTION_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_STARTLIST_SETTING_OPTION_FK2
    FOREIGN KEY (STARTLIST_SETTING_NR,CLIENT_NR)
    REFERENCES rt_startlist_setting (STARTLIST_SETTING_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_STARTLIST_SETTING_OPTION_FK1 ON rt_startlist_setting_option (CLIENT_NR);

CREATE INDEX RT_STARTLIST_SETTING_OPTION_FK2 ON rt_startlist_setting_option (STARTLIST_SETTING_NR);


-- -----------------------------------------------------
-- Table rt_startlist_setting_vacant
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_startlist_setting_vacant (
  STARTLIST_SETTING_NR INT8  NOT NULL ,
  CLIENT_NR INT8  NOT NULL ,
  START_TIME BIGINT NULL DEFAULT NULL ,
  BIB_NO VARCHAR(60) NULL DEFAULT NULL ,
  PRIMARY KEY (STARTLIST_SETTING_NR, CLIENT_NR, START_TIME, BIB_NO) ,
  CONSTRAINT RT_STARTLIST_SETTING_VACANT_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_STARTLIST_SETTING_VACANT_FK2
    FOREIGN KEY (STARTLIST_SETTING_NR,CLIENT_NR)
    REFERENCES rt_startlist_setting (STARTLIST_SETTING_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_STARTLIST_SETTING_VACANT_FK1 ON rt_startlist_setting_vacant (CLIENT_NR);

CREATE INDEX RT_STARTLIST_SETTING_VACANT_FK2 ON rt_startlist_setting_vacant (STARTLIST_SETTING_NR);


-- -----------------------------------------------------
-- Table rt_course
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_course (
  COURSE_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  SHORTCUT VARCHAR(60) NULL DEFAULT NULL ,
  EVENT_NR INT8  NULL DEFAULT NULL ,
  LENGTH INT8  NULL DEFAULT NULL ,
  CLIMB INT8  NULL DEFAULT NULL ,
  STARTLIST_SETTING_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (COURSE_NR, CLIENT_NR) ,
  CONSTRAINT RT_COURSE_FK1
    FOREIGN KEY (EVENT_NR,CLIENT_NR)
    REFERENCES rt_event (EVENT_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_COURSE_FK2
    FOREIGN KEY (STARTLIST_SETTING_NR , CLIENT_NR )
    REFERENCES rt_startlist_setting (STARTLIST_SETTING_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE UNIQUE INDEX RT_COURSE_FK1 ON rt_course (EVENT_NR, COURSE_NR, CLIENT_NR) ;

CREATE INDEX RT_COURSE_FK2 ON rt_course (STARTLIST_SETTING_NR, CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_course_control
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_course_control (
  COURSE_CONTROL_NR INT8 ,
  COURSE_NR INT8 NULL ,
  CONTROL_NR INT8 NULL ,
  FORK_TYPE_UID INT8 NULL DEFAULT NULL,
  FORK_MASTER_COURSE_CONTROL_NR INT8 NULL DEFAULT NULL,
  FORK_VARIANT_CODE VARCHAR(60) NULL DEFAULT NULL,
  SORTCODE INT8  NOT NULL DEFAULT '0' ,
  COUNT_LEG BOOLEAN NOT NULL DEFAULT TRUE ,
  MANDATORY BOOLEAN NOT NULL DEFAULT TRUE ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (CLIENT_NR, COURSE_CONTROL_NR),
  CONSTRAINT RT_COURSE_CONTROL_FK1
    FOREIGN KEY (COURSE_NR,CLIENT_NR)
    REFERENCES rt_course (COURSE_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_COURSE_CONTROL_FK2
    FOREIGN KEY (CONTROL_NR,CLIENT_NR)
    REFERENCES rt_control (CONTROL_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_COURSE_CONTROL_FK3
    FOREIGN KEY (FORK_MASTER_COURSE_CONTROL_NR,CLIENT_NR)
    REFERENCES rt_course_control (COURSE_CONTROL_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

DROP INDEX IF EXISTS RT_COURSE_CONTROL_FK1;
CREATE INDEX RT_COURSE_CONTROL_FK1 ON rt_course_control (COURSE_NR,CLIENT_NR) ;

DROP INDEX IF EXISTS RT_COURSE_CONTROL_FK2;
CREATE INDEX RT_COURSE_CONTROL_FK2 ON rt_course_control (CONTROL_NR,CLIENT_NR) ;

DROP INDEX IF EXISTS RT_COURSE_CONTROL_FK3;
CREATE INDEX RT_COURSE_CONTROL_FK3 ON rt_course_control (FORK_MASTER_COURSE_CONTROL_NR,CLIENT_NR) ;

ALTER TABLE rt_course_control ADD CONSTRAINT rt_course_control_unique UNIQUE (CLIENT_NR, COURSE_NR, CONTROL_NR, SORTCODE);

-- -----------------------------------------------------
-- Table rt_default
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_default (
  DEFAULT_UID INT8  NOT NULL ,
  CLIENT_NR INT8  NOT NULL ,
  VALUE_STRING VARCHAR(250) NULL DEFAULT NULL ,
  VALUE_INTEGER INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (DEFAULT_UID, CLIENT_NR) ,
  CONSTRAINT RT_DEFAULT_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_DEFAULT_FK1 ON rt_default (CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_ecard
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_ecard (
  ECARD_NR INT8 ,
  ECARD_NO VARCHAR(60) NULL DEFAULT NULL ,
  TYPE_UID INT8  NOT NULL DEFAULT '0' ,
  RENTAL_CARD BOOLEAN NULL DEFAULT NULL ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (ECARD_NR,CLIENT_NR) ,
  CONSTRAINT RT_ECARD_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_ECARD_FK1 ON rt_ecard (CLIENT_NR) ;

CREATE INDEX RT_ECARD_IX1 ON rt_ecard (ECARD_NO);


-- -----------------------------------------------------
-- Table rt_runner
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_runner (
  RUNNER_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  ACCOUNT_NR INT8 NULL DEFAULT NULL,
  FIRST_NAME VARCHAR(250) NULL DEFAULT NULL ,
  LAST_NAME VARCHAR(250) NULL DEFAULT NULL ,
  EVT_BIRTH DATE NULL DEFAULT NULL ,
  EXT_KEY VARCHAR(60) NULL DEFAULT NULL ,
  CLUB_NR INT8  NULL DEFAULT NULL ,
  ECARD_NR INT8  NULL DEFAULT NULL ,
  ACTIVE BOOLEAN NOT NULL DEFAULT TRUE ,
  NATION_UID INT8  NULL DEFAULT NULL ,
  ADDRESS_NR INT8  NULL DEFAULT NULL ,
  YEAR INT8 NULL DEFAULT NULL ,
  DEFAULT_CLASS_UID INT8  NULL DEFAULT NULL ,
  SEX_UID INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (RUNNER_NR, CLIENT_NR) ,
  CONSTRAINT RT_RUNNER_FK1
    FOREIGN KEY (ADDRESS_NR,CLIENT_NR)
    REFERENCES rt_address (ADDRESS_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RUNNER_FK2
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RUNNER_FK3
    FOREIGN KEY (ACCOUNT_NR )
    REFERENCES rt_account (ACCOUNT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RUNNER_FK4
    FOREIGN KEY (ECARD_NR,CLIENT_NR)
    REFERENCES rt_ecard (ECARD_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RUNNER_FK5
    FOREIGN KEY (CLUB_NR,CLIENT_NR)
    REFERENCES rt_club (CLUB_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;
CREATE INDEX RT_RUNNER_FK1 ON rt_runner (ADDRESS_NR) ;

CREATE INDEX RT_RUNNER_IX1 ON rt_runner (EXT_KEY);

CREATE INDEX RT_RUNNER_FK2 ON rt_runner (CLIENT_NR) ;

-- -----------------------------------------------------
-- rt_club RT_CLUB_FK1
-- -----------------------------------------------------

ALTER TABLE RT_CLUB ADD
  CONSTRAINT RT_CLUB_FK1
    FOREIGN KEY (CONTACT_RUNNER_NR , CLIENT_NR )
    REFERENCES rt_runner (RUNNER_NR , CLIENT_NR );




-- -----------------------------------------------------
-- Table rt_ecard_station
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_ecard_station (
  STATION_NR INT8 ,
  IDENTIFIER VARCHAR(60) NULL DEFAULT NULL ,
  CLIENT_ADDRESS VARCHAR(60) NULL DEFAULT NULL ,
  BAUD INT8 NULL DEFAULT NULL ,
  PORT VARCHAR(250) NULL DEFAULT NULL ,
  MODUS_UID INT8  NULL DEFAULT NULL ,
  PRINTER VARCHAR(250) NULL DEFAULT NULL ,
  POS_PRINTER VARCHAR(250) NULL DEFAULT NULL ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (STATION_NR,CLIENT_NR) )
;

-- -----------------------------------------------------
-- Table rt_registration
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_registration (
  REGISTRATION_NR INT8 ,
  CLIENT_NR INT8  NOT NULL DEFAULT 0 ,
  REGISTRATION_NO VARCHAR(60) NULL ,
  EVT_REGISTRATION TIMESTAMP NULL ,
  STARTLIST_SETTING_OPTION_UID INT8 NULL DEFAULT NULL,
  TOTAL_FEE DOUBLE PRECISION NULL DEFAULT 0 ,
  PRIMARY KEY (REGISTRATION_NR, CLIENT_NR) ,
  CONSTRAINT FK_REGISTRATION_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX FK_REGISTRATION_FK1 ON rt_registration (CLIENT_NR) ;

CREATE INDEX RT_REGISTRATION_IX1 ON rt_registration (REGISTRATION_NO);

-- -----------------------------------------------------
-- Table rt_entry
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_entry (
  ENTRY_NR INT8 ,
  CLIENT_NR INT8  NOT NULL DEFAULT '0' ,
  STATUS_UID INT8  NULL DEFAULT NULL ,
  REGISTRATION_NR INT8  NULL DEFAULT NULL ,
  EVT_ENTRY TIMESTAMP NULL DEFAULT NULL ,
  CURRENCY_UID INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (ENTRY_NR, CLIENT_NR) ,
  CONSTRAINT RT_ENTRY_FK1
    FOREIGN KEY (REGISTRATION_NR , CLIENT_NR )
    REFERENCES rt_registration (REGISTRATION_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_ENTRY_FK2
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_ENTRY_FK1 ON rt_entry (REGISTRATION_NR, CLIENT_NR) ;

CREATE INDEX RT_ENTRY_FK2 ON rt_entry (CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_uc
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_uc (
  UC_UID INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  CODE_TYPE INT8  NOT NULL DEFAULT '0' ,
  ACTIVE BOOLEAN NOT NULL DEFAULT TRUE ,
  SHORTCUT VARCHAR(60) NULL DEFAULT NULL ,
  PRIMARY KEY (UC_UID, CLIENT_NR) )
;

-- -----------------------------------------------------
-- Table rt_fee_group
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_fee_group (
  FEE_GROUP_NR INT8 ,
  CLIENT_NR INT8  NOT NULL DEFAULT '0' ,
  NAME VARCHAR(250) NULL DEFAULT NULL ,
  CASH_PAYMENT_ON_REGISTRATION BOOLEAN NULL DEFAULT NULL ,
  PRIMARY KEY (FEE_GROUP_NR, CLIENT_NR) ,
  CONSTRAINT RT_FEE_GROUP_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_FEE_GROUP_FK1 ON rt_fee_group (CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_event_class
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_event_class (
  EVENT_NR INT8  NOT NULL ,
  CLASS_UID INT8  NOT NULL ,
  CLIENT_NR INT8  NOT NULL DEFAULT '0' ,
  PARENT_UID INT8  NULL DEFAULT NULL ,
  SORTCODE INT8  NULL DEFAULT NULL ,
  TYPE_UID INT8  NULL DEFAULT '0' ,
  COURSE_NR INT8  NULL DEFAULT NULL ,
  TIME_PRECISION_UID INT8  NULL DEFAULT NULL ,
  COURSE_GENERATION_TYPE_UID INT8  NULL DEFAULT NULL ,
  FEE_GROUP_NR INT8  NULL DEFAULT NULL ,
  STARTLIST_SETTING_NR INT8  NULL DEFAULT NULL ,
  TEAM_SIZE_MIN INT8  NULL DEFAULT NULL ,
  TEAM_SIZE_MAX INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (EVENT_NR, CLASS_UID, CLIENT_NR) ,
  CONSTRAINT RT_EVENT_CLASS_FK1
    FOREIGN KEY (EVENT_NR,CLIENT_NR)
    REFERENCES rt_event (EVENT_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_EVENT_CLASS_FK2
    FOREIGN KEY (CLASS_UID,CLIENT_NR)
    REFERENCES rt_uc (UC_UID,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_EVENT_CLASS_FK3
    FOREIGN KEY (PARENT_UID,CLIENT_NR)
    REFERENCES rt_uc (UC_UID,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_EVENT_CLASS_FK4
    FOREIGN KEY (PARENT_UID , EVENT_NR,CLIENT_NR)
    REFERENCES rt_event_class (CLASS_UID , EVENT_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_EVENT_CLASS_FK5
    FOREIGN KEY (FEE_GROUP_NR , CLIENT_NR )
    REFERENCES rt_fee_group (FEE_GROUP_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_EVENT_CLASS_FK6
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_EVENT_CLASS_FK7
    FOREIGN KEY (STARTLIST_SETTING_NR , CLIENT_NR )
    REFERENCES rt_startlist_setting (STARTLIST_SETTING_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_EVENT_CLASS_FK1 ON rt_event_class (EVENT_NR) ;

CREATE INDEX RT_EVENT_CLASS_FK2 ON rt_event_class (CLASS_UID) ;

CREATE INDEX RT_EVENT_CLASS_FK3 ON rt_event_class (PARENT_UID) ;

CREATE INDEX RT_EVENT_CLASS_FK4 ON rt_event_class (PARENT_UID, EVENT_NR) ;

CREATE INDEX RT_EVENT_CLASS_FK5 ON rt_event_class (FEE_GROUP_NR, CLIENT_NR) ;

CREATE INDEX RT_EVENT_CLASS_FK6 ON rt_event_class (CLIENT_NR) ;

CREATE INDEX RT_EVENT_CLASS_FK7 ON rt_event_class (STARTLIST_SETTING_NR, CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_map
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_map (
  MAP_NR INT8 ,
  NAME VARCHAR(250) NULL DEFAULT NULL ,
  SCALE INT8  NULL DEFAULT NULL ,
  W INT4  NULL DEFAULT NULL ,
  H INT4  NULL DEFAULT NULL ,
  NW_X DOUBLE PRECISION NULL DEFAULT NULL ,
  NW_Y DOUBLE PRECISION NULL DEFAULT NULL ,
  NE_X DOUBLE PRECISION NULL DEFAULT NULL ,
  NE_Y DOUBLE PRECISION NULL DEFAULT NULL ,
  SE_X DOUBLE PRECISION NULL DEFAULT NULL ,
  SE_Y DOUBLE PRECISION NULL DEFAULT NULL ,
  SW_X DOUBLE PRECISION NULL DEFAULT NULL ,
  SW_Y DOUBLE PRECISION NULL DEFAULT NULL ,
  ORIGIN_X DOUBLE PRECISION NULL DEFAULT NULL ,
  ORIGIN_Y DOUBLE PRECISION NULL DEFAULT NULL ,
  RESOLUTION DOUBLE PRECISION NULL DEFAULT NULL ,
  FORMAT VARCHAR(60) NULL DEFAULT NULL ,
  EVT_FILE_LAST_UPDATE TIMESTAMP NULL DEFAULT NULL ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (MAP_NR, CLIENT_NR) )
;

CREATE INDEX RT_MAP_FK1 ON rt_map (CLIENT_NR) ;



-- -----------------------------------------------------
-- Table rt_event_map
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_event_map (
  EVENT_NR INT8  NOT NULL DEFAULT '0' ,
  MAP_NR INT8  NOT NULL DEFAULT '0' ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (EVENT_NR, MAP_NR, CLIENT_NR) ,
  CONSTRAINT RT_EVENT_MAP_FK1
    FOREIGN KEY (EVENT_NR,CLIENT_NR)
    REFERENCES rt_event (EVENT_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_EVENT_MAP_FK2
    FOREIGN KEY (MAP_NR,CLIENT_NR)
    REFERENCES rt_map (MAP_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_EVENT_MAP_FK1 ON rt_event_map (EVENT_NR) ;

CREATE INDEX RT_EVENT_MAP_FK2 ON rt_event_map (MAP_NR) ;


-- -----------------------------------------------------
-- Table rt_fee
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_fee (
  FEE_NR INT8 ,
  CLIENT_NR INT8  NOT NULL DEFAULT '0' ,
  FEE_GROUP_NR INT8  NULL DEFAULT NULL ,
  FEE DOUBLE PRECISION NOT NULL DEFAULT '0' ,
  EVT_FROM TIMESTAMP NULL DEFAULT NULL ,
  EVT_TO TIMESTAMP NULL DEFAULT NULL ,
  AGE_TO INT8  NULL DEFAULT NULL ,
  AGE_FROM INT8  NULL DEFAULT NULL ,
  CURRENCY_UID INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (FEE_NR, CLIENT_NR) ,
  CONSTRAINT RT_FEE_FK1
    FOREIGN KEY (FEE_GROUP_NR , CLIENT_NR )
    REFERENCES rt_fee_group (FEE_GROUP_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_FEE_FK1 ON rt_fee (FEE_GROUP_NR, CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_event_startblock
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_event_startblock (
  STARTBLOCK_UID INT8  NOT NULL ,
  EVENT_NR INT8  NOT NULL ,
  CLIENT_NR INT8  NOT NULL ,
  SORTCODE INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (STARTBLOCK_UID, EVENT_NR, CLIENT_NR) ,
  CONSTRAINT RT_EVENT_STARTBLOCK_FK1
    FOREIGN KEY (EVENT_NR , CLIENT_NR )
    REFERENCES rt_event (EVENT_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_EVENT_STARTBLOCK_FK2
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_EVENT_STARTBLOCK_FK3
    FOREIGN KEY (STARTBLOCK_UID , CLIENT_NR )
    REFERENCES rt_uc (UC_UID , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_EVENT_STARTBLOCK_FK2 ON rt_event_startblock (CLIENT_NR) ;

CREATE INDEX RT_EVENT_STARTBLOCK_FK3 ON rt_event_startblock (STARTBLOCK_UID, CLIENT_NR) ;

CREATE INDEX RT_EVENT_STARTBLOCK_FK1 ON rt_event_startblock (EVENT_NR, CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_participation
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_participation (
  EVENT_NR INT8  NOT NULL DEFAULT '0' ,
  ENTRY_NR INT8  NOT NULL DEFAULT '0' ,
  CLIENT_NR INT8  NOT NULL ,
  CLASS_UID INT8  NULL DEFAULT NULL ,
  SUMMARY_TIME BIGINT NULL DEFAULT NULL ,
  STATUS_UID INT8  NULL DEFAULT NULL ,
  START_TIME BIGINT NULL DEFAULT NULL ,
  STARTBLOCK_UID INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (EVENT_NR, ENTRY_NR, CLIENT_NR) ,
  CONSTRAINT RT_PARTICIPATION_FK1
    FOREIGN KEY (EVENT_NR,CLIENT_NR)
    REFERENCES rt_event (EVENT_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_PARTICIPATION_FK2
    FOREIGN KEY (ENTRY_NR , CLIENT_NR )
    REFERENCES rt_entry (ENTRY_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_PARTICIPATION_FK3
    FOREIGN KEY (EVENT_NR , CLASS_UID , CLIENT_NR )
    REFERENCES rt_event_class (EVENT_NR , CLASS_UID , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_PARTICIPATION_FK4
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_PARTICIPATION_FK5
    FOREIGN KEY (EVENT_NR , CLIENT_NR , STARTBLOCK_UID )
    REFERENCES rt_event_startblock (EVENT_NR , CLIENT_NR , STARTBLOCK_UID )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_PARTICIPATION_FK1 ON rt_participation (EVENT_NR) ;

CREATE INDEX RT_PARTICIPATION_FK2 ON rt_participation (ENTRY_NR, CLIENT_NR) ;

CREATE INDEX RT_PARTICIPATION_FK3 ON rt_participation (EVENT_NR, CLASS_UID, CLIENT_NR) ;

CREATE INDEX RT_PARTICIPATION_FK4 ON rt_participation (CLIENT_NR) ;

CREATE INDEX RT_PARTICIPATION_FK5 ON rt_participation (EVENT_NR, CLIENT_NR, STARTBLOCK_UID) ;


-- -----------------------------------------------------
-- Table rt_web_session
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_web_session (
  WEB_SESSION_NR INT8 ,
  SESSION_KEY VARCHAR(250) NULL DEFAULT NULL ,
  CLIENT_IP VARCHAR(250) NULL DEFAULT NULL ,
  USER_AGENT VARCHAR(4000) NULL DEFAULT NULL ,
  EVT_LAST_LOGIN TIMESTAMP NULL DEFAULT NULL ,
  ACCOUNT_NR INT8  NULL DEFAULT NULL ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (WEB_SESSION_NR),
  CONSTRAINT RT_WEB_SESSION_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_WEB_SESSION_FK2
    FOREIGN KEY (ACCOUNT_NR )
    REFERENCES rt_account (ACCOUNT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
;





-- -----------------------------------------------------
-- Table rt_race
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_race (
  RACE_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  EVENT_NR INT8  NULL DEFAULT NULL ,
  RUNNER_NR INT8  NULL DEFAULT NULL ,
  ENTRY_NR INT8  NULL DEFAULT NULL ,
  ECARD_NR INT8  NULL DEFAULT NULL ,
  CLUB_NR INT8  NULL DEFAULT NULL ,
  ADDRESS_NR INT8  NULL DEFAULT NULL ,
  NATION_UID INT8  NULL DEFAULT NULL ,
  LEG_CLASS_UID INT8  NULL DEFAULT NULL ,
  LEG_TIME BIGINT NULL DEFAULT NULL ,
  LEG_START_TIME BIGINT NULL DEFAULT NULL ,
  BIB_NO VARCHAR(60) NULL DEFAULT NULL ,
  STATUS_UID INT8  NULL DEFAULT NULL ,
  MANUAL_STATUS BOOLEAN NOT NULL DEFAULT FALSE ,
  PRIMARY KEY (RACE_NR, CLIENT_NR) ,
  CONSTRAINT RT_RACE_FK1
    FOREIGN KEY (RUNNER_NR , CLIENT_NR )
    REFERENCES rt_runner (RUNNER_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RACE_FK2
    FOREIGN KEY (EVENT_NR , ENTRY_NR , CLIENT_NR )
    REFERENCES rt_participation (EVENT_NR , ENTRY_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RACE_FK3
    FOREIGN KEY (ECARD_NR,CLIENT_NR)
    REFERENCES rt_ecard (ECARD_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RACE_FK4
    FOREIGN KEY (EVENT_NR , LEG_CLASS_UID , CLIENT_NR )
    REFERENCES rt_event_class (EVENT_NR , CLASS_UID , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RACE_FK5
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RACE_FK6
    FOREIGN KEY (CLUB_NR , CLIENT_NR )
    REFERENCES rt_club (CLUB_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RACE_FK7
    FOREIGN KEY (NATION_UID , CLIENT_NR )
    REFERENCES rt_uc (UC_UID , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RACE_FK8
    FOREIGN KEY (ADDRESS_NR , CLIENT_NR )
    REFERENCES rt_address (ADDRESS_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RACE_FK9
    FOREIGN KEY (ENTRY_NR , CLIENT_NR )
    REFERENCES rt_entry (ENTRY_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_RACE_FK1 ON rt_race (RUNNER_NR, CLIENT_NR) ;

CREATE INDEX RT_RACE_FK2 ON rt_race (EVENT_NR, ENTRY_NR, CLIENT_NR) ;

CREATE INDEX RT_RACE_FK3 ON rt_race (ECARD_NR) ;

CREATE INDEX RT_RACE_FK4 ON rt_race (EVENT_NR, LEG_CLASS_UID, CLIENT_NR) ;

CREATE INDEX RT_RACE_FK5 ON rt_race (CLIENT_NR) ;

CREATE INDEX RT_RACE_FK7 ON rt_race (NATION_UID, CLIENT_NR) ;

CREATE INDEX RT_RACE_FK6 ON rt_race (CLUB_NR, CLIENT_NR) ;

CREATE INDEX RT_RACE_FK8 ON rt_race (ADDRESS_NR, CLIENT_NR) ;

CREATE INDEX RT_RACE_FK9 ON rt_race (ENTRY_NR, CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_position
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_position (
  POSITION_NR INT8 ,
  UPDATE_TIME TIMESTAMP NULL DEFAULT NULL ,
  LATITUDE DOUBLE PRECISION NULL DEFAULT NULL ,
  LONGITUDE DOUBLE PRECISION NULL DEFAULT NULL ,
  ACCURACY DOUBLE PRECISION NULL DEFAULT NULL ,
  ALTITUDE DOUBLE PRECISION NULL DEFAULT NULL ,
  ALTITUDE_ACCURACY DOUBLE PRECISION NULL DEFAULT NULL ,
  SPEED DOUBLE PRECISION NULL DEFAULT NULL ,
  HEADING DOUBLE PRECISION NULL DEFAULT NULL ,
  WEB_SESSION_NR INT8  NULL DEFAULT NULL ,
  RACE_NR INT8  NULL DEFAULT NULL,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (POSITION_NR),
  CONSTRAINT RT_POSITION_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_POSITION_FK2
    FOREIGN KEY (WEB_SESSION_NR )
    REFERENCES rt_web_session (WEB_SESSION_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_POSITION_FK3
    FOREIGN KEY (RACE_NR, CLIENT_NR)
    REFERENCES rt_race (RACE_NR, CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
;

CREATE INDEX RT_POSITION_FK1 ON rt_position (CLIENT_NR) ;

CREATE INDEX RT_POSITION_FK2 ON rt_position (WEB_SESSION_NR) ;

CREATE INDEX RT_POSITION_FK3 ON rt_position (RACE_NR, CLIENT_NR) ;

-- -----------------------------------------------------
-- Table rt_punch_session
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_punch_session (
  PUNCH_SESSION_NR INT8 ,
  RACE_NR INT8  NULL DEFAULT NULL ,
  ECARD_NR INT8  NULL DEFAULT NULL ,
  STATION_NR INT8  NULL DEFAULT NULL ,
  EVT_DOWNLOAD TIMESTAMP NULL DEFAULT NULL ,
  EVENT_NR INT8  NULL DEFAULT NULL ,
  START BIGINT NULL DEFAULT NULL ,
  FINISH BIGINT NULL DEFAULT NULL ,
  RAW_DATA TEXT NULL DEFAULT NULL ,
  ECARD_CHECK BIGINT NULL DEFAULT NULL ,
  ECARD_CLEAR BIGINT NULL DEFAULT NULL ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (PUNCH_SESSION_NR,CLIENT_NR) ,
  CONSTRAINT RT_PUNCH_SESSION_FK1
    FOREIGN KEY (RACE_NR,CLIENT_NR)
    REFERENCES rt_race (RACE_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_PUNCH_SESSION_FK2
    FOREIGN KEY (ECARD_NR,CLIENT_NR)
    REFERENCES rt_ecard (ECARD_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_PUNCH_SESSION_FK3
    FOREIGN KEY (STATION_NR,CLIENT_NR)
    REFERENCES rt_ecard_station (STATION_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_PUNCH_SESSION_FK1 ON rt_punch_session (RACE_NR) ;

CREATE INDEX RT_PUNCH_SESSION_FK2 ON rt_punch_session (ECARD_NR) ;

CREATE INDEX RT_PUNCH_SESSION_FK3 ON rt_punch_session (STATION_NR) ;


-- -----------------------------------------------------
-- Table rt_punch
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_punch (
  SORTCODE INT8  NOT NULL ,
  PUNCH_SESSION_NR INT8  NOT NULL ,
  CONTROL_NO VARCHAR(60) NULL DEFAULT NULL ,
  TIME BIGINT NULL DEFAULT NULL ,
  CLIENT_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (SORTCODE, PUNCH_SESSION_NR,CLIENT_NR) ,
  CONSTRAINT RT_PUNCH_FK1
    FOREIGN KEY (PUNCH_SESSION_NR,CLIENT_NR)
    REFERENCES rt_punch_session (PUNCH_SESSION_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_PUNCH_FK1 ON rt_punch (PUNCH_SESSION_NR) ;


-- -----------------------------------------------------
-- Table rt_race_control
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_race_control (
  RACE_CONTROL_NR INT8,
  RACE_NR INT8  NULL DEFAULT NULL,
  COURSE_CONTROL_NR INT8  NULL DEFAULT NULL,
  CONTROL_NR INT8  NULL DEFAULT NULL,
  SORTCODE INT8  NULL DEFAULT NULL,
  STATUS_UID INT8  NULL DEFAULT NULL,
  OVERALL_TIME BIGINT NULL DEFAULT NULL,
  LEG_TIME BIGINT NULL DEFAULT NULL,
  MANUAL_STATUS BOOLEAN NOT NULL DEFAULT FALSE,
  SHIFT_TIME BIGINT NULL DEFAULT NULL,  
  ADDITIONAL_CONTROL_NR INT8 NULL DEFAULT NULL,
  CLIENT_NR INT8  NULL DEFAULT NULL,
  PRIMARY KEY (RACE_CONTROL_NR,CLIENT_NR),
  CONSTRAINT RT_RACE_CONTROL_FK1
    FOREIGN KEY (RACE_NR,CLIENT_NR)
    REFERENCES rt_race (RACE_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RACE_CONTROL_FK2
    FOREIGN KEY (COURSE_CONTROL_NR,CLIENT_NR)
    REFERENCES rt_course_control (COURSE_CONTROL_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RACE_CONTROL_FK3
    FOREIGN KEY (CONTROL_NR,CLIENT_NR)
    REFERENCES rt_control (CONTROL_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_RACE_CONTROL_FK1 ON rt_race_control (RACE_NR);

CREATE INDEX RT_RACE_CONTROL_FK2 ON rt_race_control (COURSE_CONTROL_NR,CLIENT_NR);

CREATE INDEX RT_RACE_CONTROL_FK3 ON rt_race_control (CONTROL_NR,CLIENT_NR);

-- -----------------------------------------------------
-- Table rt_ucl
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_ucl (
  UC_UID INT8  NOT NULL DEFAULT '0' ,
  CLIENT_NR INT8  NOT NULL ,
  LANGUAGE_UID INT8  NOT NULL DEFAULT '0' ,
  CODE_NAME VARCHAR(250) NULL DEFAULT NULL ,
  PRIMARY KEY (UC_UID, CLIENT_NR, LANGUAGE_UID) ,
  CONSTRAINT RT_UCL_FK1
    FOREIGN KEY (UC_UID , CLIENT_NR )
    REFERENCES rt_uc (UC_UID , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_UCL_FK1 ON rt_ucl (UC_UID) ;

CREATE INDEX RT_UCL_IX1 ON RT_UCL (CODE_NAME);


-- -----------------------------------------------------
-- Table rt_additional_information_def
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_additional_information_def (
  ADDITIONAL_INFORMATION_UID INT8  NOT NULL ,
  CLIENT_NR INT8  NOT NULL DEFAULT '0' ,
  TYPE_UID INT8  NULL DEFAULT NULL ,
  ENTITY_UID INT8 NULL DEFAULT NULL ,
  VALUE_MIN DOUBLE PRECISION NULL DEFAULT NULL ,
  VALUE_MAX DOUBLE PRECISION NULL DEFAULT NULL ,
  PARENT_UID INT8  NULL DEFAULT NULL ,
  DEFAULT_INTEGER BIGINT NULL DEFAULT NULL ,
  DEFAULT_DECIMAL DOUBLE PRECISION NULL DEFAULT NULL ,
  DEFAULT_TEXT VARCHAR(250) NULL DEFAULT NULL ,
  MANDATORY BOOLEAN NULL DEFAULT NULL ,
  FEE_GROUP_NR INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (ADDITIONAL_INFORMATION_UID, CLIENT_NR) ,
  CONSTRAINT RT_ADDITIONAL_INFORMATION_DEF_FK1
    FOREIGN KEY (FEE_GROUP_NR , CLIENT_NR )
    REFERENCES rt_fee_group (FEE_GROUP_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_ADDITIONAL_INFORMATION_DEF_FK2
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_ADDITIONAL_INFORMATION_DEF_FK1 ON rt_additional_information_def (FEE_GROUP_NR, CLIENT_NR) ;

CREATE INDEX RT_ADDITIONAL_INFORMATION_DEF_FK2 ON rt_additional_information_def (CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_additional_information
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_additional_information (
  ADDITIONAL_INFORMATION_UID INT8  NOT NULL DEFAULT '0' ,
  JOIN_NR INT8  NOT NULL DEFAULT '0' ,
  ENTITY_UID INT8  NOT NULL DEFAULT '0' ,
  CLIENT_NR INT8  NOT NULL DEFAULT '0' ,
  VALUE_INTEGER BIGINT NULL DEFAULT NULL ,
  VALUE_DOUBLE DOUBLE PRECISION NULL DEFAULT NULL ,
  VALUE_STRING VARCHAR(250) NULL DEFAULT NULL ,
  PRIMARY KEY (ADDITIONAL_INFORMATION_UID, CLIENT_NR, JOIN_NR, ENTITY_UID) ,
  CONSTRAINT RT_ADDITIONAL_INFORMATION_FK1
    FOREIGN KEY (ADDITIONAL_INFORMATION_UID , CLIENT_NR )
    REFERENCES rt_additional_information_def (ADDITIONAL_INFORMATION_UID , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_ADDITIONAL_INFORMATION_FK2
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_ADDITIONAL_INFORMATION_FK1 ON rt_additional_information (ADDITIONAL_INFORMATION_UID) ;

CREATE INDEX RT_ADDITIONAL_INFORMATION_FK2 ON rt_additional_information (CLIENT_NR) ;

CREATE INDEX RT_ADDITIONAL_INFORMATION_IX1 ON rt_additional_information (ADDITIONAL_INFORMATION_UID, JOIN_NR, ENTITY_UID, CLIENT_NR);


-- -----------------------------------------------------
-- Table rt_event_additional_information
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_event_additional_information (
  ADDITIONAL_INFORMATION_UID INT8  NOT NULL DEFAULT '0' ,
  EVENT_NR INT8  NOT NULL DEFAULT '0' ,
  CLIENT_NR INT8  NOT NULL DEFAULT '0' ,
  PRIMARY KEY (ADDITIONAL_INFORMATION_UID, EVENT_NR, CLIENT_NR) ,
  CONSTRAINT RT_EVENT_ADDITIONAL_INFORMATION_FK1
    FOREIGN KEY (EVENT_NR,CLIENT_NR)
    REFERENCES rt_event (EVENT_NR,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_EVENT_ADDITIONAL_INFORMATION_FK2
    FOREIGN KEY (ADDITIONAL_INFORMATION_UID , CLIENT_NR )
    REFERENCES rt_additional_information_def (ADDITIONAL_INFORMATION_UID , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_EVENT_ADDITIONAL_INFORMATION_FK1 ON rt_event_additional_information (EVENT_NR) ;

CREATE INDEX RT_EVENT_ADDITIONAL_INFORMATION_FK2 ON rt_event_additional_information (ADDITIONAL_INFORMATION_UID, CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_payment
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_payment (
  PAYMENT_NR INT8 ,
  CLIENT_NR INT8  NOT NULL DEFAULT '0' ,
  PAYMENT_NO VARCHAR(60) NULL DEFAULT NULL ,
  REGISTRATION_NR INT8  NULL DEFAULT NULL ,
  EVT_PAYMENT TIMESTAMP NULL DEFAULT NULL ,
  AMOUNT DOUBLE PRECISION NULL DEFAULT NULL ,
  CURRENCY_UID INT8  NULL DEFAULT NULL ,
  TYPE_UID INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (PAYMENT_NR, CLIENT_NR) ,
  CONSTRAINT RT_PAYMENT_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_PAYMENT_FK2
    FOREIGN KEY (REGISTRATION_NR , CLIENT_NR )
    REFERENCES rt_registration (REGISTRATION_NR , CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_PAYMENT_FK1 ON rt_payment (CLIENT_NR) ;

CREATE INDEX RT_PAYMENT_FK2 ON rt_payment (REGISTRATION_NR, CLIENT_NR) ;


-- -----------------------------------------------------
-- Table rt_currency
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_currency (
  CURRENCY_UID INT8  NOT NULL ,
  CLIENT_NR INT8  NOT NULL ,
  EXCHANGE_RATE DOUBLE PRECISION NULL DEFAULT NULL ,
  PRIMARY KEY (CURRENCY_UID, CLIENT_NR) ,
  CONSTRAINT RT_CURRENCY_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_CURRENCY_FK2
    FOREIGN KEY (CURRENCY_UID,CLIENT_NR)
    REFERENCES rt_uc (UC_UID,CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_CURRENCY_FK1 ON rt_currency (CLIENT_NR) ;

CREATE INDEX RT_CURRENCY_FK2 ON rt_currency (CURRENCY_UID) ;




-- -----------------------------------------------------
-- Table rt_user
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_user (
  USER_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  USERNAME VARCHAR(250) NULL DEFAULT NULL ,
  PASSWORD VARCHAR(250) NULL DEFAULT NULL ,
  LANGUAGE_UID INT8  NULL DEFAULT NULL ,
  PRIMARY KEY (USER_NR, CLIENT_NR) ,
  CONSTRAINT RT_USER_FK1
    FOREIGN KEY (CLIENT_NR)
    REFERENCES rt_client (CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_USER_FK1 ON rt_user (CLIENT_NR);

CREATE UNIQUE INDEX RT_USER_I1 ON rt_user (USERNAME);

-- -----------------------------------------------------
-- Table rt_user_role
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_user_role (
  USER_NR INT8 NOT NULL ,
  ROLE_UID INT8 NOT NULL ,
  CLIENT_NR INT8  NOT NULL ,
  PRIMARY KEY (USER_NR, CLIENT_NR, ROLE_UID) ,
  CONSTRAINT RT_USER_ROLE_FK1
    FOREIGN KEY (CLIENT_NR)
    REFERENCES rt_client (CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX RT_USER_ROLE_FK1 ON rt_user_role (CLIENT_NR);



-- -----------------------------------------------------
-- Table rt_account_client
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_account_client (
  ACCOUNT_NR INT8 NOT NULL,
  CLIENT_NR INT8 NOT NULL,
  PRIMARY KEY (ACCOUNT_NR, CLIENT_NR),
  CONSTRAINT RT_ACCOUNT_CLIENT_FK1
    FOREIGN KEY (CLIENT_NR)
    REFERENCES rt_client (CLIENT_NR)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table rt_ranking
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_ranking (
  RANKING_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  NAME VARCHAR(250) NULL DEFAULT NULL ,
  DECIMAL_PLACES INT8  NULL DEFAULT NULL ,
  SORTING_UID INT8  NULL DEFAULT NULL,
  FORMAT_UID INT8  NULL DEFAULT NULL,
  FORMULA TEXT NULL DEFAULT NULL,
  PRIMARY KEY (RANKING_NR, CLIENT_NR) ,
  CONSTRAINT RT_RANKING_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE INDEX RT_RANKING_FK1 ON rt_ranking (CLIENT_NR);



-- -----------------------------------------------------
-- Table rt_ranking_event
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_ranking_event (
  RANKING_NR INT8 NOT NULL,
  EVENT_NR INT8 NOT NULL,
  CLIENT_NR INT8  NOT NULL,
  SORTCODE INT8  NULL DEFAULT NULL ,
  DECIMAL_PLACES INT8  NULL DEFAULT NULL ,
  SORTING_UID INT8  NULL DEFAULT NULL,
  FORMAT_UID INT8  NULL DEFAULT NULL,
  FORMULA TEXT NULL DEFAULT NULL,
  PRIMARY KEY (RANKING_NR, EVENT_NR, CLIENT_NR) ,
  CONSTRAINT RT_RANKING_EVENT_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RANKING_EVENT_FK2
    FOREIGN KEY (EVENT_NR, CLIENT_NR)
    REFERENCES rt_event (EVENT_NR, CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_RANKING_EVENT_FK3
    FOREIGN KEY (RANKING_NR, CLIENT_NR )
    REFERENCES rt_ranking (RANKING_NR, CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


CREATE INDEX RT_RANKING_EVENT_FK1 ON rt_ranking_event (CLIENT_NR);

CREATE INDEX RT_RANKING_EVENT_FK2 ON rt_ranking_event (EVENT_NR, CLIENT_NR);

CREATE INDEX RT_RANKING_EVENT_FK3 ON rt_ranking_event (RANKING_NR, CLIENT_NR);


-- -----------------------------------------------------
-- Table rt_report_template
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_report_template (
  REPORT_TEMPLATE_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  TYPE_UID INT8  NULL DEFAULT NULL,
  EVENT_NR INT8 NULL DEFAULT NULL,
  ACTIVE BOOLEAN NULL DEFAULT NULL,
  PRIMARY KEY (REPORT_TEMPLATE_NR, CLIENT_NR) ,
  SHORTCUT VARCHAR(60) NULL DEFAULT NULL,
  CONSTRAINT RT_REPORT_TEMPLATE_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_REPORT_TEMPLATE_FK2
    FOREIGN KEY (EVENT_NR, CLIENT_NR)
    REFERENCES rt_event (EVENT_NR, CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE INDEX RT_REPORT_TEMPLATE_FK1 ON rt_report_template (CLIENT_NR);

CREATE INDEX RT_REPORT_TEMPLATE_FK2 ON rt_report_template (EVENT_NR, CLIENT_NR);



-- -----------------------------------------------------
-- Table rt_report_template_file
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS rt_report_template_file (
  REPORT_TEMPLATE_FILE_NR INT8 ,
  CLIENT_NR INT8  NOT NULL ,
  REPORT_TEMPLATE_NR INT8  NOT NULL ,
  TEMPLATE VARCHAR(250) NULL DEFAULT NULL ,
  IS_MASTER BOOLEAN NOT NULL DEFAULT FALSE ,
  LAST_MODIFIED BIGINT NOT NULL DEFAULT 0 ,
  PRIMARY KEY (REPORT_TEMPLATE_FILE_NR, CLIENT_NR) ,
  CONSTRAINT RT_REPORT_TEMPLATE_FILE_FK1
    FOREIGN KEY (CLIENT_NR )
    REFERENCES rt_client (CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT RT_REPORT_TEMPLATE_FILE_FK2
    FOREIGN KEY (REPORT_TEMPLATE_NR, CLIENT_NR)
    REFERENCES rt_report_template (REPORT_TEMPLATE_NR, CLIENT_NR )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE INDEX RT_REPORT_TEMPLATE_FILE_FK1 ON rt_report_template_file (CLIENT_NR);

CREATE INDEX RT_REPORT_TEMPLATE_FILE_FK2 ON rt_report_template_file (REPORT_TEMPLATE_NR, CLIENT_NR);