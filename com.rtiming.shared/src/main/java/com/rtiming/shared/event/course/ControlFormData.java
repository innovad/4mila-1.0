package com.rtiming.shared.event.course;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "com.rtiming.client.event.course.ControlForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class ControlFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public Active getActive() {
    return getFieldByClass(Active.class);
  }

  /**
   * access method for property ClientNr.
   */
  public Long getClientNr() {
    return getClientNrProperty().getValue();
  }

  /**
   * access method for property ClientNr.
   */
  public void setClientNr(Long clientNr) {
    getClientNrProperty().setValue(clientNr);
  }

  public ClientNrProperty getClientNrProperty() {
    return getPropertyByClass(ClientNrProperty.class);
  }

  /**
   * access method for property ControlNr.
   */
  public Long getControlNr() {
    return getControlNrProperty().getValue();
  }

  /**
   * access method for property ControlNr.
   */
  public void setControlNr(Long controlNr) {
    getControlNrProperty().setValue(controlNr);
  }

  public ControlNrProperty getControlNrProperty() {
    return getPropertyByClass(ControlNrProperty.class);
  }

  public Event getEvent() {
    return getFieldByClass(Event.class);
  }

  public GlobalX getGlobalX() {
    return getFieldByClass(GlobalX.class);
  }

  public GlobalY getGlobalY() {
    return getFieldByClass(GlobalY.class);
  }

  public Number getNumber() {
    return getFieldByClass(Number.class);
  }

  public PositionX getPositionX() {
    return getFieldByClass(PositionX.class);
  }

  public PositionY getPositionY() {
    return getFieldByClass(PositionY.class);
  }

  public Type getType() {
    return getFieldByClass(Type.class);
  }

  public static class Active extends AbstractValueFieldData<Boolean> {

    private static final long serialVersionUID = 1L;
  }

  public static class ClientNrProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;
  }

  public static class ControlNrProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;
  }

  public static class Event extends AbstractValueFieldData<Long> {

    private static final long serialVersionUID = 1L;
  }

  public static class GlobalX extends AbstractValueFieldData<Double> {

    private static final long serialVersionUID = 1L;
  }

  public static class GlobalY extends AbstractValueFieldData<Double> {

    private static final long serialVersionUID = 1L;
  }

  public static class Number extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class PositionX extends AbstractValueFieldData<Double> {

    private static final long serialVersionUID = 1L;
  }

  public static class PositionY extends AbstractValueFieldData<Double> {

    private static final long serialVersionUID = 1L;
  }

  public static class Type extends AbstractValueFieldData<Long> {

    private static final long serialVersionUID = 1L;
  }
}
