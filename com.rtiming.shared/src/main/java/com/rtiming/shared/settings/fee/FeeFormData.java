package com.rtiming.shared.settings.fee;

import java.math.BigDecimal;
import java.util.Date;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "com.rtiming.client.settings.fee.FeeForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class FeeFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  /**
   * access method for property AdditionalInformationUid.
   */
  public Long getAdditionalInformationUid() {
    return getAdditionalInformationUidProperty().getValue();
  }

  /**
   * access method for property AdditionalInformationUid.
   */
  public void setAdditionalInformationUid(Long additionalInformationUid) {
    getAdditionalInformationUidProperty().setValue(additionalInformationUid);
  }

  public AdditionalInformationUidProperty getAdditionalInformationUidProperty() {
    return getPropertyByClass(AdditionalInformationUidProperty.class);
  }

  public AgeFrom getAgeFrom() {
    return getFieldByClass(AgeFrom.class);
  }

  public AgeTo getAgeTo() {
    return getFieldByClass(AgeTo.class);
  }

  /**
   * access method for property CashPaymentOnRegistration.
   */
  public boolean isCashPaymentOnRegistration() {
    return getCashPaymentOnRegistrationProperty().getValue() == null ? false : getCashPaymentOnRegistrationProperty().getValue();
  }

  /**
   * access method for property CashPaymentOnRegistration.
   */
  public void setCashPaymentOnRegistration(boolean cashPaymentOnRegistration) {
    getCashPaymentOnRegistrationProperty().setValue(cashPaymentOnRegistration);
  }

  public CashPaymentOnRegistrationProperty getCashPaymentOnRegistrationProperty() {
    return getPropertyByClass(CashPaymentOnRegistrationProperty.class);
  }

  /**
   * access method for property ClassUid.
   */
  public Long getClassUid() {
    return getClassUidProperty().getValue();
  }

  /**
   * access method for property ClassUid.
   */
  public void setClassUid(Long classUid) {
    getClassUidProperty().setValue(classUid);
  }

  public ClassUidProperty getClassUidProperty() {
    return getPropertyByClass(ClassUidProperty.class);
  }

  public Currency getCurrency() {
    return getFieldByClass(Currency.class);
  }

  public DateFrom getDateFrom() {
    return getFieldByClass(DateFrom.class);
  }

  public DateTo getDateTo() {
    return getFieldByClass(DateTo.class);
  }

  /**
   * access method for property EventNr.
   */
  public Long getEventNr() {
    return getEventNrProperty().getValue();
  }

  /**
   * access method for property EventNr.
   */
  public void setEventNr(Long eventNr) {
    getEventNrProperty().setValue(eventNr);
  }

  public EventNrProperty getEventNrProperty() {
    return getPropertyByClass(EventNrProperty.class);
  }

  public Fee getFee() {
    return getFieldByClass(Fee.class);
  }

  /**
   * access method for property FeeGroupNr.
   */
  public Long getFeeGroupNr() {
    return getFeeGroupNrProperty().getValue();
  }

  /**
   * access method for property FeeGroupNr.
   */
  public void setFeeGroupNr(Long feeGroupNr) {
    getFeeGroupNrProperty().setValue(feeGroupNr);
  }

  public FeeGroupNrProperty getFeeGroupNrProperty() {
    return getPropertyByClass(FeeGroupNrProperty.class);
  }

  /**
   * access method for property FeeNr.
   */
  public Long getFeeNr() {
    return getFeeNrProperty().getValue();
  }

  /**
   * access method for property FeeNr.
   */
  public void setFeeNr(Long feeNr) {
    getFeeNrProperty().setValue(feeNr);
  }

  public FeeNrProperty getFeeNrProperty() {
    return getPropertyByClass(FeeNrProperty.class);
  }

  public static class AdditionalInformationUidProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;
  }

  public static class AgeFrom extends AbstractValueFieldData<Long> {

    private static final long serialVersionUID = 1L;
  }

  public static class AgeTo extends AbstractValueFieldData<Long> {

    private static final long serialVersionUID = 1L;
  }

  public static class CashPaymentOnRegistrationProperty extends AbstractPropertyData<Boolean> {

    private static final long serialVersionUID = 1L;
  }

  public static class ClassUidProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;
  }

  public static class Currency extends AbstractValueFieldData<Long> {

    private static final long serialVersionUID = 1L;
  }

  public static class DateFrom extends AbstractValueFieldData<Date> {

    private static final long serialVersionUID = 1L;
  }

  public static class DateTo extends AbstractValueFieldData<Date> {

    private static final long serialVersionUID = 1L;
  }

  public static class EventNrProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;
  }

  public static class Fee extends AbstractValueFieldData<BigDecimal> {

    private static final long serialVersionUID = 1L;
  }

  public static class FeeGroupNrProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;
  }

  public static class FeeNrProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;
  }
}
